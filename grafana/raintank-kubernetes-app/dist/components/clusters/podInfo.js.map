{"version":3,"sources":["../../../src/components/clusters/podInfo.js"],"names":["slugify","str","slug","replace","moment","PodInfoCtrl","$scope","$injector","backendSrv","datasourceSrv","$q","$location","alertSrv","document","title","pageReady","pod","search","set","cluster_id","cluster","pod_name","loadDatasource","then","clusterDS","getPod","id","get","datasource","ds","jsonData","name","condition","status","type","value","text","path","spec","nodeName","metadata","namespace","conditionStatus","time","format","templateUrl"],"mappings":"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","file":"podInfo.js","sourcesContent":["import moment from 'moment';\n\nfunction slugify(str) {\n  var slug = str.replace(\"@\", \"at\").replace(\"&\", \"and\").replace(/[.]/g, \"_\").replace(\"/\\W+/\", \"\");\n  return slug;\n}\n\nexport class PodInfoCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, backendSrv, datasourceSrv, $q, $location, alertSrv) {\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.datasourceSrv = datasourceSrv;\n    this.$location = $location;\n    document.title = 'Grafana Kubernetes App';\n\n    this.pageReady = false;\n    this.pod = {};\n    if (!(\"cluster\" in $location.search())) {\n      alertSrv.set(\"no cluster specified.\", \"no cluster specified in url\", 'error');\n      return;\n    } else {\n      this.cluster_id = $location.search().cluster;\n      let pod_name    = $location.search().pod;\n\n      this.loadDatasource(this.cluster_id).then(() => {\n        this.clusterDS.getPod(pod_name).then(pod => {\n          this.pod = pod;\n          this.pageReady = true;\n        });\n      });\n    }\n  }\n\n  loadDatasource(id) {\n    return this.backendSrv.get('api/datasources/' + id)\n      .then(ds => {\n        this.datasource = ds.jsonData.ds;\n        return this.datasourceSrv.get(ds.name);\n      }).then(clusterDS => {\n        this.clusterDS = clusterDS;\n        return clusterDS;\n      });\n  }\n\n  conditionStatus(condition) {\n    var status;\n    if (condition.type === \"Ready\") {\n      status = condition.status === \"True\";\n    } else {\n      status = condition.status === \"False\";\n    }\n\n    return {\n      value: status,\n      text: status ? \"Ok\" : \"Error\"\n    };\n  }\n\n  goToPodDashboard(pod) {\n    this.$location.path(\"dashboard/db/kubernetes-container\")\n    .search({\n      \"var-datasource\": this.datasource,\n      \"var-cluster\": this.clusterDS.name,\n      \"var-node\": slugify(pod.spec.nodeName),\n      \"var-namespace\": pod.metadata.namespace,\n      \"var-pod\": pod.metadata.name\n    });\n  }\n\n  isConditionOk(condition) {\n    return this.conditionStatus(condition).value;\n  }\n\n  formatTime(time) {\n    return moment(time).format('YYYY-MM-DD HH:mm:ss');\n  }\n}\n\nPodInfoCtrl.templateUrl = 'components/clusters/partials/pod_info.html';\n"]}