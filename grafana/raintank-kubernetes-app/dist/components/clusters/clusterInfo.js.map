{"version":3,"sources":["../../../src/components/clusters/clusterInfo.js"],"names":["slugify","str","slug","replace","getComponentHealth","component","health","message","_","forEach","conditions","condition","type","status","getHealthState","getNodeHealth","node","text","iconClass","stateClass","$","ClusterInfoCtrl","$scope","$injector","backendSrv","datasourceSrv","$q","$location","alertSrv","document","title","pageReady","cluster","componentStatuses","namespaces","namespace","nodes","search","set","getCluster","then","clusterDS","getClusterInfo","id","get","ds","name","getComponentStatuses","map","stats","stat","healthState","getNamespaces","getNodes","path","jsonData","evt","clickTargetIsLinkOrHasLinkParents","target","closest","length","metadata","ns","closestElm","head","clickTargetClickAttr","find","attributes","clickTargetIsNodeDashboard","value","templateUrl"],"mappings":"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","file":"clusterInfo.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\n\nfunction slugify(str) {\n  var slug = str.replace(\"@\", \"at\").replace(\"&\", \"and\").replace(/[.]/g, \"_\").replace(\"/\\W+/\", \"\");\n  return slug;\n}\n\nexport class ClusterInfoCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, backendSrv, datasourceSrv, $q, $location, alertSrv) {\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.datasourceSrv = datasourceSrv;\n    this.$location = $location;\n    document.title = 'Grafana Kubernetes App';\n\n    this.pageReady = false;\n    this.cluster = {};\n    this.componentStatuses = [];\n    this.namespaces = [];\n    this.namespace = \"\";\n    this.nodes = [];\n\n    if (!(\"cluster\" in $location.search())) {\n      alertSrv.set(\"no cluster specified.\", \"no cluster specified in url\", 'error');\n      return;\n    }\n\n    this.getCluster($location.search().cluster)\n      .then(clusterDS => {\n        this.clusterDS = clusterDS;\n        this.pageReady = true;\n        this.getClusterInfo();\n      });\n  }\n\n  getCluster(id) {\n    return this.backendSrv.get('api/datasources/' + id).then(ds => {\n      this.cluster = ds;\n      return this.datasourceSrv.get(ds.name);\n    });\n  }\n\n  getClusterInfo() {\n    this.clusterDS.getComponentStatuses().then(stats => {\n      this.componentStatuses = _.map(stats, stat => {\n        stat.healthState = getComponentHealth(stat);\n        return stat;\n      });\n    });\n    this.clusterDS.getNamespaces().then(namespaces => {\n      this.namespaces = namespaces;\n    });\n    this.clusterDS.getNodes().then(nodes => {\n      this.nodes = _.map(nodes, node => {\n        node.healthState = getNodeHealth(node);\n        return node;\n      });\n    });\n  }\n\n  goToClusterDashboard() {\n    this.$location.path(\"dashboard/db/kubernetes-cluster\")\n      .search({\n        \"var-datasource\": this.cluster.jsonData.ds,\n        \"var-cluster\": this.cluster.name\n      });\n  }\n\n  goToPodDashboard() {\n    this.$location.path(\"dashboard/db/kubernetes-container\")\n    .search({\n      \"var-datasource\": this.cluster.jsonData.ds,\n      \"var-cluster\": this.cluster.name,\n      \"var-node\": 'All',\n      \"var-namespace\": 'All',\n      \"var-pod\": 'All'\n    });\n  }\n\n  goToNodeDashboard(node, evt) {\n    var clickTargetIsLinkOrHasLinkParents = $(evt.target).closest('a').length > 0;\n    if (clickTargetIsLinkOrHasLinkParents === false) {\n      this.$location.path(\"dashboard/db/kubernetes-node\")\n      .search({\n        \"var-datasource\": this.cluster.jsonData.ds,\n        \"var-cluster\": this.cluster.name,\n        \"var-node\": node === 'All' ? 'All': slugify(node.metadata.name)\n      });\n    }\n  }\n\n  goToWorkloads(ns, evt) {\n    var clickTargetIsLinkOrHasLinkParents = $(evt.target).closest('a').length > 0;\n    if (clickTargetIsLinkOrHasLinkParents === false) {\n      this.$location.path(\"plugins/raintank-kubernetes-app/page/cluster-workloads\")\n      .search({\n        \"cluster\": this.cluster.id,\n        \"namespace\": slugify(ns.metadata.name)\n      });\n    }\n  }\n\n  goToNodeInfo(node, evt) {\n    var clickTargetIsLinkOrHasLinkParents = $(evt.target).closest('a').length > 0;\n\n    var closestElm = _.head($(evt.target).closest('div'));\n    var clickTargetClickAttr = _.find(closestElm.attributes, {name: \"ng-click\"});\n    var clickTargetIsNodeDashboard = clickTargetClickAttr ? clickTargetClickAttr.value === \"ctrl.goToNodeDashboard(node, $event)\" : false;\n    if (clickTargetIsLinkOrHasLinkParents === false &&\n        clickTargetIsNodeDashboard === false) {\n      this.$location.path(\"plugins/raintank-kubernetes-app/page/node-info\")\n      .search({\n        \"cluster\": this.cluster.id,\n        \"node\": node.metadata.name\n      });\n    }\n  }\n}\n\nfunction getComponentHealth(component) {\n  let health = \"unhealthy\";\n  let message = '';\n  _.forEach(component.conditions, condition => {\n    if (condition.type   === \"Healthy\" &&\n        condition.status === \"True\") {\n      health = \"ok\";\n    } else {\n      message = condition.message;\n    }\n  });\n  return getHealthState(health, message);\n}\n\nfunction getNodeHealth(node) {\n  let health = \"unhealthy\";\n  let message = '';\n  _.forEach(node.status.conditions, condition => {\n    if (condition.type   === \"Ready\" &&\n        condition.status === \"True\") {\n      health = \"ok\";\n    } else {\n      message = condition.message;\n    }\n  });\n  return getHealthState(health, message);\n}\n\nfunction getHealthState(health, message) {\n  switch (health) {\n    case 'ok': {\n      return {\n        text: 'OK',\n        iconClass: 'icon-gf icon-gf-online',\n        stateClass: 'alert-state-ok'\n      };\n    }\n    case 'unhealthy': {\n      return {\n        text: 'UNHEALTHY',\n        iconClass: 'icon-gf icon-gf-critical',\n        stateClass: 'alert-state-critical',\n        message: message || ''\n      };\n    }\n    case 'warning': {\n      return {\n        text: 'warning',\n        iconClass: \"icon-gf icon-gf-critical\",\n        stateClass: 'alert-state-warning',\n        message: message || ''\n      };\n    }\n  }\n}\n\nClusterInfoCtrl.templateUrl = 'components/clusters/partials/cluster_info.html';\n"]}