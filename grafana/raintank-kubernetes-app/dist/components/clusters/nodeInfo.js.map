{"version":3,"sources":["../../../src/components/clusters/nodeInfo.js"],"names":["slugify","str","slug","replace","moment","NodeInfoCtrl","$scope","$injector","backendSrv","datasourceSrv","$q","$location","alertSrv","document","title","pageReady","cluster","clusterDS","node","search","set","cluster_id","node_name","loadDatasource","then","getNode","id","get","ds","name","path","jsonData","metadata","condition","status","type","value","text","conditionStatus","lastTransitionTime","format","templateUrl"],"mappings":"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","file":"nodeInfo.js","sourcesContent":["import moment from 'moment';\n\nexport class NodeInfoCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, backendSrv, datasourceSrv, $q, $location, alertSrv) {\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.datasourceSrv = datasourceSrv;\n    this.$location = $location;\n    document.title = 'Grafana Kubernetes App';\n\n    this.pageReady = false;\n    this.cluster = {};\n    this.clusterDS = {};\n    this.node = {};\n\n    if (!(\"cluster\" in $location.search())) {\n      alertSrv.set(\"no cluster specified.\", \"no cluster specified in url\", 'error');\n      return;\n    } else {\n      let cluster_id = $location.search().cluster;\n      let node_name  = $location.search().node;\n\n      this.loadDatasource(cluster_id).then(() => {\n        this.clusterDS.getNode(node_name).then(node => {\n          this.node = node;\n          this.pageReady = true;\n        });\n      });\n    }\n  }\n\n  loadDatasource(id) {\n    return this.backendSrv.get('api/datasources/' + id)\n      .then(ds => {\n        this.cluster = ds;\n        return this.datasourceSrv.get(ds.name);\n      }).then(clusterDS => {\n        this.clusterDS = clusterDS;\n        return clusterDS;\n      });\n  }\n\n  goToNodeDashboard() {\n    this.$location.path(\"dashboard/db/kubernetes-node\")\n      .search({\n        \"var-datasource\": this.cluster.jsonData.ds,\n        \"var-cluster\": this.cluster.name,\n        \"var-node\": slugify(this.node.metadata.name)\n      });\n  }\n\n  conditionStatus(condition) {\n    var status;\n    if (condition.type === \"Ready\") {\n      status = condition.status === \"True\";\n    } else {\n      status = condition.status === \"False\";\n    }\n\n    return {\n      value: status,\n      text: status ? \"Ok\" : \"Error\"\n    };\n  }\n\n  isConditionOk(condition) {\n    return this.conditionStatus(condition).value;\n  }\n\n  conditionLastTransitionTime(condition) {\n    return moment(condition.lastTransitionTime).format('YYYY-MM-DD HH:mm:ss');\n  }\n}\n\nfunction slugify(str) {\n  var slug = str.replace(\"@\", \"at\").replace(\"&\", \"and\").replace(/[.]/g, \"_\").replace(\"/\\W+/\", \"\");\n  return slug;\n}\n\nNodeInfoCtrl.templateUrl = 'components/clusters/partials/node_info.html';\n"]}