{"version":3,"sources":["../../../src/components/clusters/clusterConfig.js"],"names":["slugify","str","slug","replace","_","appEvents","angular","ClusterConfigCtrl","$scope","$injector","backendSrv","$q","contextSrv","$location","$window","alertSrv","self","isOrgEditor","hasRole","cluster","type","pageReady","snapDeployed","showHelp","document","title","getDatasources","then","promises","search","push","getCluster","getDaemonSets","forEach","ds","items","daemonSet","metadata","name","getGraphiteDatasources","all","id","get","jsonData","result","datasources","filter","request","url","method","headers","saveDatasource","set","catch","err","cm","generateConfigMap","saveToFile","generateKubestateConfigMap","kubestate","filename","json","blob","Blob","toJson","wnd","window","saveAs","question","emit","text","yesText","icon","onConfirm","saveAndDeploy","undeploySnap","put","post","deploySnap","task","cloneDeep","snapTask","workflow","collect","publish","config","prefix","port","server","cadvisor_task","snapCadvisorTask","configMap","data","JSON","stringify","kubestateSnapTask","kubestateConfigMap","kubestateCm","checkApiVersion","createConfigMap","createDaemonSet","createDeployment","updateSnapSettings","deleteConfigMap","deleteDaemonSet","deleteDeployment","deletePods","clusterId","resources","length","deployment","deploymentName","cmName","pods","pod","history","back","templateUrl","raintankSnapImage","initialDelaySeconds","labels"],"mappings":"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","file":"clusterConfig.js","sourcesContent":["import _ from 'lodash';\nimport appEvents from 'app/core/app_events';\nimport angular from 'angular';\n\nfunction slugify(str) {\n  var slug = str.replace(\"@\", \"at\").replace(\"&\", \"and\").replace(/[.]/g, \"_\").replace(\"/\\W+/\", \"\");\n  return slug;\n}\n\nexport class ClusterConfigCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, backendSrv, $q, contextSrv, $location, $window, alertSrv) {\n    var self = this;\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.isOrgEditor = contextSrv.hasRole('Editor') || contextSrv.hasRole('Admin');\n    this.$window = $window;\n    this.$location = $location;\n    this.cluster = {type: 'raintank-kubernetes-datasource'};\n    this.pageReady = false;\n    this.snapDeployed = false;\n    this.alertSrv = alertSrv;\n    this.showHelp = false;\n    document.title = 'Grafana Kubernetes App';\n\n    this.getDatasources().then(() => {\n      self.pageReady = true;\n    });\n  }\n\n  toggleHelp() {\n    this.showHelp = !this.showHelp;\n  }\n\n  getDatasources() {\n    var self = this;\n    var promises = [];\n    if (\"cluster\" in self.$location.search()) {\n      promises.push(self.getCluster(this.$location.search().cluster).then(() => {\n        return self.getDaemonSets().then(ds => {\n          _.forEach(ds.items, function(daemonSet) {\n            if (daemonSet.metadata.name === \"snap\") {\n              self.snapDeployed = true;\n            }\n          });\n        });\n      }));\n    }\n\n    promises.push(self.getGraphiteDatasources());\n\n    return this.$q.all(promises);\n  }\n\n  getCluster(id) {\n    var self = this;\n    return this.backendSrv.get('/api/datasources/'+id)\n    .then((ds) => {\n      if (!(ds.jsonData.ds)) {\n        ds.jsonData.ds = \"\";\n      }\n      self.cluster = ds;\n    });\n  }\n\n  getGraphiteDatasources() {\n    var self = this;\n    return this.backendSrv.get('/api/datasources')\n    .then((result) => {\n      self.datasources = _.filter(result, {\"type\": \"graphite\"});\n    });\n  }\n\n  getDaemonSets() {\n    var self = this;\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + self.cluster.id + '/apis/extensions/v1beta1/daemonsets',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  save() {\n    return this.saveDatasource()\n      .then(() => {\n        return this.getDatasources();\n      })\n      .then(() => {\n        this.alertSrv.set(\"Saved\", \"Saved and successfully connected to \" + this.cluster.name, 'success', 3000);\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Saved\", \"Saved but failed to connect to \" + this.cluster.name + '. Error: ' + err, 'error', 5000);\n      });\n  }\n\n  saveConfigMapToFile() {\n    const cm = this.generateConfigMap();\n    this.saveToFile('snap-configmap', cm);\n  }\n\n  saveKubestateConfigMapToFile() {\n    const cm = this.generateKubestateConfigMap();\n    this.saveToFile('snap-kubestate-configmap', cm);\n  }\n\n  saveDaemonSetToFile() {\n    this.saveToFile('snap-daemonset', daemonSet);\n  }\n\n  saveDeploymentToFile() {\n    this.saveToFile('snap-kubestate', kubestate);\n  }\n\n  saveToFile(filename, json) {\n    const blob = new Blob([angular.toJson(json, true)], { type: \"application/json;charset=utf-8\" });\n    const wnd = window;\n    wnd.saveAs(blob, filename + '.json');\n  }\n\n  deploy() {\n    var question = !this.snapDeployed ?\n      'This action will deploy a DaemonSet to your Kubernetes cluster. It uses Intel Snap to collect health metrics. '\n      + 'Are you sure you want to deploy?'\n      : 'This action will update the Config Map for the Snap DaemonSet and recreate the snapd pod on your Kubernetes cluster. '\n      + 'Are you sure you want to deploy?';\n    appEvents.emit('confirm-modal', {\n      title: 'Deploy to Kubernetes Cluster',\n      text: question,\n      yesText: \"Deploy\",\n      icon: \"fa-question\",\n      onConfirm: () => {\n        this.saveAndDeploy();\n      }\n    });\n  }\n\n  undeploy() {\n    var question = 'This action will remove the DaemonSet on your Kubernetes cluster that collects health metrics. '\n      + 'Are you sure you want to remove it?';\n\n    appEvents.emit('confirm-modal', {\n      title: 'Remove Daemonset Collector',\n      text: question,\n      yesText: \"Remove\",\n      icon: \"fa-question\",\n      onConfirm: () => {\n        this.undeploySnap();\n      }\n    });\n  }\n\n  saveDatasource() {\n    if (this.cluster.id) {\n      return this.backendSrv.put('/api/datasources/' + this.cluster.id, this.cluster);\n    } else {\n      return this.backendSrv.post('/api/datasources', this.cluster);\n    }\n  }\n\n  saveAndDeploy() {\n    return this.saveDatasource()\n      .then(() => {\n        return this.deploySnap();\n      });\n  }\n\n  generateConfigMap() {\n    var task = _.cloneDeep(snapTask);\n    task.workflow.collect.publish[0].config.prefix = \"snap.\"+slugify(this.cluster.name) + \".<%NODE%>\";\n    task.workflow.collect.publish[0].config.port = this.cluster.jsonData.port;\n    task.workflow.collect.publish[0].config.server = this.cluster.jsonData.server;\n    var cadvisor_task = _.cloneDeep(snapCadvisorTask);\n    cadvisor_task.workflow.collect.publish[0].config.prefix = \"snap.\"+slugify(this.cluster.name) + \".<%NODE%>\";\n    cadvisor_task.workflow.collect.publish[0].config.port = this.cluster.jsonData.port;\n    cadvisor_task.workflow.collect.publish[0].config.server = this.cluster.jsonData.server;\n    var cm = _.cloneDeep(configMap);\n    cm.data[\"core.json\"] = JSON.stringify(task);\n    cm.data[\"cadvisor.json\"] = JSON.stringify(cadvisor_task);\n    return cm;\n  }\n\n  generateKubestateConfigMap() {\n    var task = _.cloneDeep(kubestateSnapTask);\n    task.workflow.collect.publish[0].config.prefix = \"snap.\"+slugify(this.cluster.name);\n    task.workflow.collect.publish[0].config.port = this.cluster.jsonData.port;\n    task.workflow.collect.publish[0].config.server = this.cluster.jsonData.server;\n    var cm = _.cloneDeep(kubestateConfigMap);\n    cm.data[\"core.json\"] = JSON.stringify(task);\n    return cm;\n  }\n\n  deploySnap() {\n    if(!this.cluster || !this.cluster.id) {\n      this.alertSrv.set(\"Error\", \"Could not connect to cluster.\", 'error');\n      return;\n    }\n\n    var self = this;\n    var cm = this.generateConfigMap();\n    var kubestateCm = this.generateKubestateConfigMap();\n\n    if (!this.snapDeployed) {\n      return this.checkApiVersion(self.cluster.id)\n      .then(() => {\n        return this.createConfigMap(self.cluster.id, cm);\n      })\n      .then(() => {\n        return this.createConfigMap(self.cluster.id, kubestateCm);\n      })\n      .then(() => {\n        return this.createDaemonSet(self.cluster.id, daemonSet);\n      })\n      .then(() => {\n        return this.createDeployment(self.cluster.id, kubestate);\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      }).then(() => {\n        this.snapDeployed = true;\n        this.alertSrv.set(\"Deployed\", \"Snap DaemonSet for Kubernetes metrics deployed to \" + self.cluster.name, 'success', 5000);\n      });\n    } else {\n      return self.updateSnapSettings(cm, kubestateCm);\n    }\n  }\n\n  undeploySnap() {\n    var self = this;\n    return this.deleteConfigMap(self.cluster.id, 'snap-tasks')\n      .then(() => {\n        return this.deleteConfigMap(self.cluster.id, 'snap-tasks-kubestate');\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      })\n      .then(() => {\n        return this.deleteDaemonSet(self.cluster.id);\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      })\n      .then(() => {\n        return this.deleteDeployment(self.cluster.id, 'snap-kubestate-deployment');\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      })\n      .then(() => {\n        return this.deletePods();\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      })\n      .then(() => {\n        this.snapDeployed = false;\n        this.alertSrv.set(\"Daemonset removed\", \"Snap DaemonSet for Kubernetes metrics removed from \" + self.cluster.name, 'success', 5000);\n      });\n  }\n\n  checkApiVersion(clusterId) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/extensions/v1beta1',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(result => {\n      if (!result.resources || result.resources.length === 0) {\n        throw \"This Kubernetes cluster does not support v1beta1 of the API which is needed to deploy automatically. \" +\n        \"You can install manually using the instructions at the bottom of the page.\";\n      }\n    });\n  }\n\n  createConfigMap(clusterId, cm) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/api/v1/namespaces/kube-system/configmaps',\n      method: 'POST',\n      data: cm,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  createDaemonSet(clusterId, daemonSet) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/extensions/v1beta1/namespaces/kube-system/daemonsets',\n      method: 'POST',\n      data: daemonSet,\n      headers: {'Content-Type': \"application/json\"}\n    });\n  }\n\n  deleteDaemonSet(clusterId) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/extensions/v1beta1/namespaces/kube-system/daemonsets/snap',\n      method: 'DELETE',\n    });\n  }\n\n  createDeployment(clusterId, deployment) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/extensions/v1beta1/namespaces/kube-system/deployments',\n      method: 'POST',\n      data: deployment,\n      headers: {'Content-Type': \"application/json\"}\n    });\n  }\n\n  deleteDeployment(clusterId, deploymentName) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/extensions/v1beta1/namespaces/kube-system/deployments/' + deploymentName,\n      method: 'DELETE'\n    }).then(() => {\n      return this.backendSrv.request({\n        url: 'api/datasources/proxy/' + clusterId +\n        '/apis/extensions/v1beta1/namespaces/kube-system/replicasets?labelSelector=app%3Dsnap-collector',\n        method: 'DELETE'\n      });\n    });\n  }\n\n  deleteConfigMap(clusterId, cmName) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/api/v1/namespaces/kube-system/configmaps/' + cmName,\n      method: 'DELETE'\n    });\n  }\n\n  deletePods() {\n    var self = this;\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + self.cluster.id\n      + '/api/v1/namespaces/kube-system/pods?labelSelector=app%3Dsnap-collector',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(pods => {\n      if (!pods || pods.items.length === 0) {\n        throw \"No snapd pod found to update.\";\n      }\n\n      var promises = [];\n\n      _.forEach(pods.items, pod => {\n        promises.push(this.backendSrv.request({\n          url: 'api/datasources/proxy/' + self.cluster.id + '/api/v1/namespaces/kube-system/pods/' + pod.metadata.name,\n          method: 'DELETE',\n        }));\n      });\n\n      return this.$q.all(promises);\n    });\n  }\n\n  updateSnapSettings(cm, kubestateCm) {\n    var self = this;\n    return this.deleteConfigMap(self.cluster.id, 'snap-tasks')\n    .then(() => {\n      return this.createConfigMap(self.cluster.id, cm);\n    }).then(() => {\n      return this.deleteConfigMap(self.cluster.id, 'snap-tasks-kubestate');\n    }).then(() => {\n      return this.createConfigMap(self.cluster.id, kubestateCm);\n    }).then(() => {\n      return this.deletePods();\n    }).catch(err => {\n      this.alertSrv.set(\"Error\", err, 'error');\n    }).then(() => {\n      this.alertSrv.set(\"Updated\", \"Graphite Settings in Config Map on \" + self.cluster.name + \" updated successfully\", 'success', 3000);\n    });\n  }\n\n  cancel() {\n    this.$window.history.back();\n  }\n\n}\n\nClusterConfigCtrl.templateUrl = 'components/clusters/partials/cluster_config.html';\n\nconst raintankSnapImage = 'raintank/snap_k8s:v23';\n\nvar configMap = {\n  \"kind\": \"ConfigMap\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"snap-tasks\",\n    \"namespace\": \"kube-system\"\n  },\n  \"data\": {\n    \"core.json\": \"\",\n    \"cadvisor.json\": \"\"\n  }\n};\n\nvar kubestateConfigMap = {\n  \"kind\": \"ConfigMap\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"snap-tasks-kubestate\",\n    \"namespace\": \"kube-system\"\n  },\n  \"data\": {\n    \"core.json\": \"\"\n  }\n};\n\nvar snapTask = {\n  \"version\": 1,\n  \"start\": true,\n  \"schedule\": {\n    \"type\": \"simple\",\n    \"interval\": \"10s\"\n  },\n  \"max-failures\": 10,\n  \"workflow\": {\n    \"collect\": {\n      \"metrics\": {\n        \"/intel/procfs/cpu/all/*\": {},\n        \"/intel/procfs/meminfo/mem_available\": {},\n        \"/intel/procfs/meminfo/mem_available_perc\": {},\n        \"/intel/procfs/meminfo/mem_free\": {},\n        \"/intel/procfs/meminfo/mem_free_perc\": {},\n        \"/intel/procfs/meminfo/mem_total\": {},\n        \"/intel/procfs/meminfo/mem_total_perc\": {},\n        \"/intel/procfs/meminfo/mem_used\": {},\n        \"/intel/procfs/meminfo/mem_used_perc\": {},\n        \"/intel/procfs/filesystem/*/inodes_free\": {},\n        \"/intel/procfs/filesystem/*/inodes_reserved\": {},\n        \"/intel/procfs/filesystem/*/inodes_used\": {},\n        \"/intel/procfs/filesystem/*/space_free\": {},\n        \"/intel/procfs/filesystem/*/space_reserved\": {},\n        \"/intel/procfs/filesystem/*/space_used\": {},\n        \"/intel/procfs/filesystem/*/inodes_percent_free\": {},\n        \"/intel/procfs/filesystem/*/inodes_percent_reserved\": {},\n        \"/intel/procfs/filesystem/*/inodes_percent_used\": {},\n        \"/intel/procfs/filesystem/*/space_percent_free\": {},\n        \"/intel/procfs/filesystem/*/space_percent_reserved\": {},\n        \"/intel/procfs/filesystem/*/space_percent_used\": {},\n        \"/intel/procfs/iface/*/bytes_recv\": {},\n        \"/intel/procfs/iface/*/bytes_sent\": {},\n        \"/intel/procfs/iface/*/packets_recv\": {},\n        \"/intel/procfs/iface/*/packets_sent\": {},\n        \"/intel/procfs/iface/*/errs_recv\": {},\n        \"/intel/procfs/iface/*/errs_sent\": {},\n        \"/intel/iostat/device/*/%util\": {},\n        \"/intel/iostat/device/*/rkB_per_sec\": {},\n        \"/intel/iostat/device/*/wkB_per_sec\": {},\n        \"/intel/iostat/device/ALL/r_per_sec\": {},\n        \"/intel/iostat/device/ALL/w_per_sec\": {},\n        \"/intel/procfs/load/min1_rel\": {}\n      },\n      \"config\": {\n        \"/intel/procfs\": {\n          \"proc_path\": \"/proc_host\",\n          \"keep_original_mountpoint\": false\n        }\n      },\n      \"publish\": [\n        {\n          \"plugin_name\": \"graphite\",\n          \"config\": {\n            \"prefix_tags\": \"\",\n            \"prefix\": \"\",\n            \"server\": \"\",\n            \"port\": 2003\n          }\n        }\n      ]\n    }\n  }\n};\n\nvar snapCadvisorTask = {\n  \"version\": 1,\n  \"start\": true,\n  \"schedule\": {\n    \"type\": \"streaming\",\n  },\n  \"workflow\": {\n    \"collect\": {\n      \"metrics\": {\n        \"/grafanalabs/cadvisor/container/*/*/*/cpu/total/usage\":{},\n        \"/grafanalabs/cadvisor/container/*/*/*/mem/usage\":{},\n        \"/grafanalabs/cadvisor/container/*/*/*/fs/*\":{},\n        \"/grafanalabs/cadvisor/container/*/*/*/diskio/*\":{},\n        \"/grafanalabs/cadvisor/container/*/*/*/iface/*/out_bytes\":{},\n        \"/grafanalabs/cadvisor/container/*/*/*/iface/*/in_bytes\":{},\n        \"/grafanalabs/cadvisor/container/*/*/*/tcp/*\": {},\n        \"/grafanalabs/cadvisor/container/*/*/*/tcp6/*\": {},\n      },\n      \"publish\": [\n        {\n          \"plugin_name\": \"graphite\",\n          \"config\": {\n            \"prefix_tags\": \"\",\n            \"prefix\": \"\",\n            \"server\": \"\",\n            \"port\": 2003\n          }\n        }\n      ]\n    }\n  }\n};\n\nvar kubestateSnapTask = {\n  \"version\": 1,\n  \"start\": true,\n  \"schedule\": {\n    \"type\": \"simple\",\n    \"interval\": \"10s\"\n  },\n  \"max-failures\": 10,\n  \"workflow\": {\n    \"collect\": {\n      \"metrics\": {\n        \"/grafanalabs/kubestate/*\":{}\n      },\n      \"process\": null,\n      \"publish\": [\n        {\n          \"plugin_name\": \"graphite\",\n          \"config\": {\n            \"prefix_tags\": \"\",\n            \"prefix\": \"\",\n            \"server\": \"\",\n            \"port\": 2003\n          }\n        }\n      ]\n    }\n  }\n};\n\nvar daemonSet = {\n  \"kind\": \"DaemonSet\",\n  \"apiVersion\": \"extensions/v1beta1\",\n  \"metadata\": {\n    \"name\": \"snap\",\n    \"namespace\": \"kube-system\",\n    \"labels\": {\n      \"daemon\": \"snapd\"\n    }\n  },\n  \"spec\": {\n    \"selector\": {\n      \"matchLabels\": {\n        \"daemon\": \"snapd\",\n        \"app\": \"snap-collector\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"name\": \"snap\",\n        \"labels\": {\n          \"daemon\": \"snapd\",\n          \"app\": \"snap-collector\"\n        }\n      },\n      \"spec\": {\n        \"volumes\": [\n          {\n            \"name\": \"dev\",\n            \"hostPath\": {\n              \"path\": \"/dev\"\n            }\n          },\n          {\n            \"name\": \"cgroup\",\n            \"hostPath\": {\n              \"path\": \"/sys/fs/cgroup\"\n            }\n          },\n          {\n            \"name\": \"docker-sock\",\n            \"hostPath\": {\n              \"path\": \"/var/run/docker.sock\"\n            }\n          },\n          {\n            \"name\": \"fs-stats\",\n            \"hostPath\": {\n              \"path\": \"/var/lib/docker\"\n            }\n          },\n          {\n            \"name\": \"docker\",\n            \"hostPath\": {\n              \"path\": \"/usr/bin/docker\"\n            }\n          },\n          {\n            \"name\": \"proc\",\n            \"hostPath\": {\n              \"path\": \"/proc\"\n            }\n          },\n          {\n            \"name\": \"snap-tasks\",\n            \"configMap\": {\n              \"name\": \"snap-tasks\"\n            }\n          }\n        ],\n        \"containers\": [\n          {\n            \"name\": \"snap\",\n            \"image\": raintankSnapImage,\n            \"command\": [\n              \"/usr/local/bin/start.sh\"\n            ],\n            \"args\": [\n              \"/opt/snap/sbin/snapteld\"\n            ],\n            \"ports\": [\n              {\n                \"name\": \"snap-api\",\n                \"hostPort\": 8282,\n                \"containerPort\": 8282,\n                \"protocol\": \"TCP\"\n              }\n            ],\n            \"livenessProbe\": {\n              \"exec\": {\n                \"command\": [\n                  \"/bin/bash\",\n                  \"-c\",\n                  \"/opt/snap/bin/snaptel task list |grep Disabled | awk 'BEGIN {err = 0} length($1) > 0 { err = 1} END {exit err}'\"\n                ]\n              },\n              initialDelaySeconds: 60\n            },\n            \"env\": [\n              {\n                \"name\": \"PROCFS_MOUNT\",\n                \"value\": \"/proc_host\"\n              },\n              {\n                \"name\": \"NODE_NAME\",\n                \"valueFrom\": {\n                  \"fieldRef\": {\n                    \"fieldPath\": \"spec.nodeName\"\n                  }\n                }\n              },\n              {\n                \"name\": \"SNAP_PORT\",\n                \"value\": \"8282\"\n              },\n              {\n                \"name\": \"SNAP_URL\",\n                \"value\": \"http://localhost:8282\"\n              },\n              {\n                \"name\": \"SNAP_LOG_LEVEL\",\n                \"value\": \"3\"\n              }\n            ],\n            \"resources\": {\n            },\n            \"volumeMounts\": [\n              {\n                \"name\": \"cgroup\",\n                \"mountPath\": \"/sys/fs/cgroup\"\n              },\n              {\n                \"name\": \"docker-sock\",\n                \"mountPath\": \"/var/run/docker.sock\"\n              },\n              {\n                \"name\": \"fs-stats\",\n                \"mountPath\": \"/var/lib/docker\"\n              },\n              {\n                \"name\": \"docker\",\n                \"mountPath\": \"/usr/local/bin/docker\"\n              },\n              {\n                \"name\": \"proc\",\n                \"mountPath\": \"/proc_host\"\n              },\n              {\n                \"name\": \"snap-tasks\",\n                \"mountPath\": \"/opt/snap/tasks\"\n              }\n            ],\n            \"imagePullPolicy\": \"IfNotPresent\",\n            \"securityContext\": {\n              \"privileged\": true\n            }\n          }\n        ],\n        \"restartPolicy\": \"Always\",\n        \"hostNetwork\": true,\n        \"hostPID\": true\n      }\n    }\n  }\n};\n\nconst kubestate = {\n  \"kind\": \"Deployment\",\n  \"apiVersion\": \"extensions/v1beta1\",\n  \"metadata\": {\n    \"name\": \"snap-kubestate-deployment\",\n    \"namespace\": \"kube-system\",\n  },\n  \"spec\": {\n    \"replicas\": 1,\n    \"template\": {\n      \"metadata\": {\n        labels: {\n          \"app\": \"snap-collector\"\n        }\n      },\n      \"spec\": {\n        \"volumes\": [\n          {\n            \"name\": \"snap-tasks\",\n            \"configMap\": {\n              \"name\": \"snap-tasks-kubestate\"\n            }\n          }\n        ],\n        \"containers\": [\n          {\n            \"name\": \"snap\",\n            \"image\": raintankSnapImage,\n            \"ports\": [\n              {\n                \"name\": \"snap-api\",\n                \"hostPort\": 8383,\n                \"containerPort\": 8383,\n                \"protocol\": \"TCP\"\n              }\n            ],\n            \"livenessProbe\": {\n              \"exec\": {\n                \"command\": [\n                  \"/bin/bash\",\n                  \"-c\",\n                  \"/opt/snap/bin/snaptel task list |grep Disabled | awk 'BEGIN {err = 0} length($1) > 0 { err = 1} END {exit err}'\"\n                ]\n              },\n              initialDelaySeconds: 60\n            },\n            \"env\": [\n              {\n                \"name\": \"SNAP_PORT\",\n                \"value\": \"8383\"\n              },\n              {\n                \"name\": \"SNAP_URL\",\n                \"value\": \"http://localhost:8383\"\n              },\n              {\n                \"name\": \"SNAP_LOG_LEVEL\",\n                \"value\": \"3\"\n              }\n            ],\n            \"resources\": {},\n            \"volumeMounts\": [\n              {\n                \"name\": \"snap-tasks\",\n                \"mountPath\": \"/opt/snap/tasks\"\n              }\n            ],\n            \"imagePullPolicy\": \"IfNotPresent\",\n          }\n        ],\n        \"restartPolicy\": \"Always\",\n      }\n    }\n  }\n};\n"]}